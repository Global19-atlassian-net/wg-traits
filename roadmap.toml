[[group]]
name = "align-rustc-predicate"
label = "Align rustc predicates with chalk predicates"
items = [
  { label = "isolate Binder into a Forall goal" },
  { label = "introduce Implication" },
  { label = "introduce Forall goals with types" },
]

[[group]]
name = "recursive-solver"
label = "Experiment with a recursive chalk solver"
items = [
  { label = "Write-up the idea that Niko had", status="Complete", href="https://gist.github.com/nikomatsakis/bfbdbe588d6fc61ecb09e3b51847fb7c" },
  { label = "Build prototype and evaluate", status="Blocked" },
]

[[group]]
name = "impl-trait"
label = "Model `impl Trait`"
items = [
  { label = "Preliminary model for opaque types where hidden types are known", status="Assigned", ref = "https://github.com/rust-lang/chalk/issues/335" }
]  

[[group]]
name = "rust-analyzer-integration"
label = "Integrate with rust-analyzer"
requires = ["impl-trait"]
items = [
  { label = "Ensure that we never need to ask for impls of unknown types", port = "askfor", requires = ["syntactic-semantic-equality"] },
  { label = "Deal with performance problems", status = "Blocked" },
  { label = "Deal with memory usage", status = "Blocked" },
]

[[group]]
name = "syntactic-semantic-equality"
label = "Separate syntactic equality from semantic equality"
requires = [
  "map-chalk-types-to-rustc-types:debruijn",
  "map-chalk-types-to-rustc-types:visit"
]
status = "Blocked"
items = [
]

[[group]]
name = "map-chalk-types-to-rustc-types"
label = "Map chalk types to rustc types"
items = [
  { label = "Rename Projection to Alias", status="Complete" }, 
  { label = "Make ty intern method take &amp;self", href="https://github.com/rust-lang-nursery/chalk/issues/328", status="Complete" },
  { label = "Make ty data methods take &amp;self", href="https://github.com/rust-lang/chalk/issues/339", status="Assigned" },
  { label = "Make other intern method take &amp;self", href="https://github.com/rust-lang-nursery/chalk/issues/340", status="Assigned" },
  { label = "Make other data methods take &amp;self", href="https://github.com/rust-lang/chalk/issues/341", status="Assigned" },
  { label = "Align placeholders and ty::Param", status="Blocked" },
  { label = "Move Identifier to TypeFamily", status="Complete" },
  { label = "Adapt rustc's debruijn index model", port="debruijn", status="Assigned", href="https://github.com/rust-lang/chalk/issues/334" },
  { label = "Remove all vectors, boxes" },
  { label = "Introduce a `Visit` trait", href="https://github.com/rust-lang/chalk/issues/333", port="visit" },
]

[[group]]
name = "rustc-integration-mvp"
label = "Integrate chalk-solve into rustc"
requires = [ "map-chalk-types-to-rustc-types" ]
items = [
  { label="remove old chalk support" },
  { label="create" },
]

[[group]]
name = "features"
label = "Explore proposed language features" 
requires = [ "rustc-integration-mvp", "rust-analyzer-integration" ]
status = "Blocked"
items = [
  { label="implied bounds" },
]

[[goal]]
name = "library"
label = "Chalk usable as a standalone library for traits solving"
requires = [ "rustc-integration-mvp", "rust-analyzer-integration" ]

[[goal]]
name = "gats"
label = "Deploy GATs in Rust nightly"
requires = [ "align-rustc-predicate" ]

